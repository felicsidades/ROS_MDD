package ROSML.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public final class Server__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xf7db56d1b41e4c13L, 0x9756a014feb108beL, 0x2126fce3999aabd2L, "ROSML.structure.Server");

  public static final SMethod<SNode> getServicio_id5Yvlr8xnW3d = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getServicio").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(6890320178452611277L).languageId(0x9756a014feb108beL, 0xf7db56d1b41e4c13L).build2(SMethodBuilder.createJavaParameter(String.class, ""));
  public static final SMethod<SNode> getAccion_id585zzjDKAoB = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getAccion").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(5910286443904919079L).languageId(0x9756a014feb108beL, 0xf7db56d1b41e4c13L).build2(SMethodBuilder.createJavaParameter(String.class, ""));
  public static final SMethod<String> getTipo_id585zzjDKKmp = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getTipo").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(5910286443904959897L).languageId(0x9756a014feb108beL, 0xf7db56d1b41e4c13L).build2(SMethodBuilder.createJavaParameter(String.class, ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(getServicio_id5Yvlr8xnW3d, getAccion_id585zzjDKAoB, getTipo_id585zzjDKKmp);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static SNode getServicio_id5Yvlr8xnW3d(@NotNull SNode __thisNode__, final String nombre) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.services$zPXp)).findFirst((it) -> SPropertyOperations.getString(it, PROPS.name$MnvL).equals(nombre));
  }
  /*package*/ static SNode getAccion_id585zzjDKAoB(@NotNull SNode __thisNode__, final String nombre) {
    return ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.actions$vnCn)).findFirst((it) -> SPropertyOperations.getString(it, PROPS.name$MnvL).equals(nombre));
  }
  /*package*/ static String getTipo_id585zzjDKKmp(@NotNull SNode __thisNode__, final String nombre) {
    if (ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.actions$vnCn)).findFirst((it) -> SPropertyOperations.getString(it, PROPS.name$MnvL).equals(nombre)) != null) {
      return "action";
    } else if (ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, LINKS.services$zPXp)).findFirst((it) -> SPropertyOperations.getString(it, PROPS.name$MnvL).equals(nombre)) != null) {
      return "service";
    } else {
      return null;
    }
  }

  /*package*/ Server__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((SNode) getServicio_id5Yvlr8xnW3d(node, (String) parameters[0]));
      case 1:
        return (T) ((SNode) getAccion_id585zzjDKAoB(node, (String) parameters[0]));
      case 2:
        return (T) ((String) getTipo_id585zzjDKKmp(node, (String) parameters[0]));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink services$zPXp = MetaAdapterFactory.getContainmentLink(0xf7db56d1b41e4c13L, 0x9756a014feb108beL, 0x2126fce3999aabd2L, 0x5f9f55b2215b96faL, "services");
    /*package*/ static final SContainmentLink actions$vnCn = MetaAdapterFactory.getContainmentLink(0xf7db56d1b41e4c13L, 0x9756a014feb108beL, 0x2126fce3999aabd2L, 0x5f9f55b2215f05fbL, "actions");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
